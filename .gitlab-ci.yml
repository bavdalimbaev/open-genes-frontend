stages:
  - build
  - test-stand
  - prod-stand

variables:
  PROJECT_TEST_DOMAIN: test.open-genes.com
  PROJECT_DEMO_DOMAIN: demo.open-genes.com
  PROJECT_DOMAIN: open-genes

build-dev:
  stage: build
  image: alexsuch/angular-cli:7.3.8
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/
  when: manual
  except:
    - master

build-demo:
  stage: build
  image: alexsuch/angular-cli:7.3.8
  script:
    - npm install
    - npm run build-demo
  artifacts:
    paths:
      - dist/
  when: manual
  except:
    - master

build-prod:
  stage: build
  image: alexsuch/angular-cli:7.3.8
  script:
    - npm install
    - npm run build-prod
  artifacts:
    paths:
      - dist/
  when: manual
  only:
    - master

deploy-dev:
  extends: .deploy
  dependencies:
    - build-dev
  environment:
    name: develop
  variables:
    PROJECT_DIR: /var/www/${PROJECT_DEV_NAME}
  except:
    - master

deploy-demo:
  extends: .deploy
  dependencies:
    - build-demo
  environment:
    name: demo
  variables:
    PROJECT_DIR: /var/www/${PROJECT_DEMO_DOMAIN}
  except:
    - master

deploy-prod-to-dev:
  extends: .deploy
  dependencies:
    - build-prod
  environment:
    name: develop
  variables:
    PROJECT_DIR: /var/www/${PROJECT_TEST_DOMAIN}
  only:
    - master

deploy-prod-to-stage:
  extends: .deploy
  dependencies:
    - build-prod
  environment:
    name: develop
  variables:
    PROJECT_DIR: /var/www/${PROJECT_DEMO_DOMAIN}
  only:
    - master

deploy-prod:
  extends: .deploy
  dependencies:
    - build-prod
  stage: prod-stand
  environment:
    name: production
  variables:
    PROJECT_DIR: /var/www/${PROJECT_DOMAIN}
  only:
    - master

.deploy:
  stage: test-stand
  image: instrumentisto/rsync-ssh
  script:
    - echo ${PROJECT_DEMO_DOMAIN}
    - echo ${PROJECT_TEST_DOMAIN}
    - echo ${PROJECT_DIR}
    - rsync -zhrl -e 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' dist/frontend/ ${DROPLET_USER}@${DROPLET_IP}:${PROJECT_DIR}/frontend/
  before_script:
    - mkdir ~/.ssh
    - echo ${DROPLET_KEY} | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  when: manual
